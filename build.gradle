plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'


}

apply plugin: 'io.spring.dependency-management'

group = 'com.github.fitzoh'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    implementation 'io.micrometer:micrometer-registry-prometheus'

    //JSON logging dependencies
    implementation 'net.logstash.logback:logstash-logback-encoder:5.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


String prometheusContainer = "prometheus"
task startPrometheus(type: Exec) {
    String prometheusConfig = project.file('prometheus.yml').absolutePath
    commandLine "docker", "run", "-d", "-p", "9090:9090", "-v", "$prometheusConfig:/etc/prometheus/prometheus.yml", "--name", prometheusContainer, "--rm", "prom/prometheus"
}

task stopPrometheusPrometheus(type: Exec) {
    commandLine "docker", "kill", prometheusContainer
}

String grafanaContainer = "grafana"
task startGrafana(type: Exec) {
    commandLine "docker", "run", "-d", "-p", "3000:3000", "--name", grafanaContainer, "--rm", "grafana/grafana"
}

task stopGrafana(type: Exec) {
    commandLine "docker", "kill", grafanaContainer
}
